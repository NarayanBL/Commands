<!DOCTYPE html>
<!-- saved from url=(0024)https://devhints.io/bash -->
<html class="WithJs LoadDone" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta content="width=device-width, initial-scale=1.0" name="viewport">
<link href="https://devhints.io/assets/favicon.png" rel="shortcut icon">
<meta content="/bash.html" name="app:pageurl">
<title>Bash scripting cheatsheet</title>
<meta content="Bash scripting cheatsheet" property="og:title">
<meta content="Bash scripting cheatsheet" property="twitter:title">
<meta content="article" property="og:type">
<meta content="https://assets.devhints.io/previews/bash.jpg?t=20191015093217" property="og:image">
<meta content="https://assets.devhints.io/previews/bash.jpg?t=20191015093217" property="twitter:image">
<meta content="900" property="og:image:width">
<meta content="471" property="og:image:height">
<meta content="Variables · Functions · Interpolation · Brace expansions · Loops · Conditional execution · Command substitution · One-page guide to Bash scripting" name="description">
<meta content="Variables · Functions · Interpolation · Brace expansions · Loops · Conditional execution · Command substitution · One-page guide to Bash scripting" property="og:description">
<meta content="Variables · Functions · Interpolation · Brace expansions · Loops · Conditional execution · Command substitution · One-page guide to Bash scripting" property="twitter:description">
<link rel="canonical" href="https://devhints.io/bash">
<meta name="og:url" content="https://devhints.io/bash">
<meta content="Devhints.io cheatsheets" property="og:site_name">
<meta content="CLI" property="article:section">
<meta content="Featured" property="article:tag">
<script type="text/javascript" async="" src="./Bash scripting cheatsheet_files/analytics.js"></script><script async="" src="./Bash scripting cheatsheet_files/js"></script>
<script>

window.dataLayer=window.dataLayer||[];
function gtag(){dataLayer.push(arguments)};
gtag('js',new Date());
gtag('config','UA-106902774-1');
</script>
<meta property="page:depth" content="1">
<script>(function(H){H.className=H.className.replace(/\bno-js\b/,'js')})(document.documentElement)</script>
<script>(function(H){H.className=H.className.replace(/\bNoJs\b/,'WithJs')})(document.documentElement)</script>
<script>(function(d,s){if(window.Promise&&[].includes&&Object.assign&&window.Map)return;var js,sc=d.getElementsByTagName(s)[0];js=d.createElement(s);js.src='https://cdn.polyfill.io/v2/polyfill.min.js';sc.parentNode.insertBefore(js, sc);}(document,'script'))</script>
<!--[if lt IE 9]><script src='https://cdnjs.cloudflare.com/ajax/libs/nwmatcher/1.2.5/nwmatcher.min.js'></script><script src='https://cdnjs.cloudflare.com/ajax/libs/json2/20140204/json2.js'></script><script src='https://cdn.rawgit.com/gisu/selectivizr/1.0.3/selectivizr.js'></script><script src='https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.min.js'></script><script src='https://cdnjs.cloudflare.com/ajax/libs/respond.js/1.4.2/respond.js'></script><![endif]-->

<style id="critical-css">*,::after,::before{background-repeat:no-repeat;box-sizing:inherit}::after,::before{text-decoration:inherit;vertical-align:inherit}html{box-sizing:border-box;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}aside,header,nav{display:block}body{margin:0}h1{font-size:2em;margin:.67em 0}main{display:block}nav ul{list-style:none}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}code{font-family:monospace,monospace;font-size:1em}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}a{-ms-touch-action:manipulation;touch-action:manipulation}body,html{background:#f1f3f5;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",sans-serif;font-size:14px;line-height:1.6;color:#345;overflow-x:hidden}body{font-size:13px;padding:0;margin:0}@media (min-width:480px) and (max-width:768px){body{font-size:calc(13px + 1 * ((100vw - 480px)/ 288))}}@media (min-width:768px) and (max-width:1280px){body{font-size:calc(14px + 0 * ((100vw - 768px)/ 512))}}@media (min-width:1280px){body{font-size:14px}}code,pre{font-family:cousine,SFMono-Regular,Consolas,Menlo,"Liberation Mono","Ubuntu Mono",Courier,monospace;letter-spacing:-.03em}pre{font-size:.96em}:not(pre):not(code){-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}a{color:#26648e}a:visited{color:#15234d}@media (max-width:580px){.hint--bottom::after,.hint--bottom::before{display:none}}html.WithJs .post-content{opacity:0}html.WithJs .intro-content,html.WithJs .pages-list,html.WithJs .post-content.-wrapified{opacity:.4}html.WithJs.LoadDone .intro-content,html.WithJs.LoadDone .pages-list,html.WithJs.LoadDone .post-content.-wrapified{opacity:1}.MarkdownBody code{color:#678;font-size:.96em}.MarkdownBody code,.MarkdownBody pre{font-family:cousine,SFMono-Regular,Consolas,Menlo,"Liberation Mono","Ubuntu Mono",Courier,monospace}.MarkdownBody pre{box-shadow:none;border-left:0;overflow:hidden;overflow-x:auto;background:#fff;font-size:.96em;line-height:1.5}.MarkdownBody pre>code{color:#111;max-height:auto;padding:0;background:0 0;overflow:visible;font-size:1em}.MarkdownBody pre.-setup{background:#f8f9fa}.MarkdownBody h2{margin:0;padding:0;margin-bottom:24px;margin-top:64px;position:relative;font-size:30px;line-height:1.2;font-weight:200;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",sans-serif;margin-top:0}@media (max-width:768px){.MarkdownBody h2{margin-bottom:8px;margin-top:32px}}@media (max-width:480px){.MarkdownBody h2{margin-bottom:8px;margin-top:32px}}@media (min-width:480px) and (max-width:768px){.MarkdownBody h2{font-size:calc(30px + 4 * ((100vw - 480px)/ 288))}}@media (min-width:768px) and (max-width:1280px){.MarkdownBody h2{font-size:calc(34px + 2 * ((100vw - 768px)/ 512))}}@media (min-width:1280px){.MarkdownBody h2{font-size:36px}}.MarkdownBody h3{margin:0;padding:0;margin-bottom:16px;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",sans-serif;font-size:17px;font-weight:400;color:#745fb5}@media (min-width:480px) and (max-width:768px){.MarkdownBody h3{font-size:calc(17px + 2 * ((100vw - 480px)/ 288))}}@media (min-width:768px) and (max-width:1280px){.MarkdownBody h3{font-size:calc(19px + 0 * ((100vw - 768px)/ 512))}}@media (min-width:1280px){.MarkdownBody h3{font-size:19px}}.MarkdownBody a,.MarkdownBody a:visited{color:#26648e;text-decoration:none}.MarkdownBody table th{padding:8px 16px;vertical-align:top;text-align:left}.MarkdownBody table tr th:last-child{text-align:right}.MarkdownBody table thead{display:none}.MarkdownBody table thead th{font-weight:400;color:#745fb5}.MarkdownBody ul.-six-column{display:flex;flex-wrap:wrap}.MarkdownBody ul.-six-column>li{flex:0 0 16.6666666667%}@media (max-width:480px){.MarkdownBody ul.-six-column>li{flex:0 0 50%}}@media (max-width:768px){.MarkdownBody ul.-six-column>li{flex:0 0 25%}}.MarkdownBody ul.-four-column{display:flex;flex-wrap:wrap}.MarkdownBody ul.-four-column>li{flex:0 0 25%}@media (max-width:480px){.MarkdownBody ul.-four-column>li{flex:0 0 50%}}@media (max-width:768px){.MarkdownBody ul.-four-column>li{flex:0 0 33.3333333333%}}.back-button{text-decoration:none;width:48px;height:48px;line-height:46px;text-align:center;display:inline-block;border-radius:50%}@media (max-width:480px){.back-button{width:32px;height:32px;line-height:30px}}.back-button,.back-button:visited{color:#678}.back-button::before{content:'';display:inline-block;vertical-align:middle;background:url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22512%22%20height%3D%22512%22%20viewBox%3D%220%200%20512%20512%22%3E%3Cpath%20fill%3D%22rgb(51%2C68%2C85)%22%20d%3D%22M427%20234.625H167.296l119.702-119.702L256%2085%2085%20256l171%20171%2029.922-29.924-118.626-119.7H427v-42.75z%22%2F%3E%3C%2Fsvg%3E") center center/24px 24px no-repeat;height:24px;width:24px;vertical-align:middle}@media (max-width:480px){.back-button::before{font-size:16px}}.body-area{max-width:1232px;margin:0 auto;padding:16px}@media (max-width:480px){.body-area{padding:16px}}.codefund-sponsor{min-height:114px}.comments-section{display:flex}@media (max-width:768px){.comments-section>.comments{flex:1 0 100%;width:100%}}@media (min-width:769px){.comments-section>.comments{flex:0 1 66%;min-width:300px}}.h2-section:first-child:not(.-no-hide)>h2{display:none}.h3-section>.body>pre{margin:0;padding:16px}@media (max-width:768px){.h3-section>.body{overflow-x:auto}}.h3-section>.body{background:#fff;box-shadow:0 6px 8px rgba(102,119,136,.03),0 1px 2px rgba(102,119,136,.3)}@media (max-width:480px){.h3-section>.body{margin:0 -16px;box-shadow:0 1px 1px rgba(102,119,136,.55)}}@media (min-width:481px){.h3-section>.body{border-radius:2px}.h3-section>.body>:first-child{border-top-left-radius:3px;border-top-right-radius:3px}.h3-section>.body>:last-child{border-bottom-left-radius:3px;border-bottom-right-radius:3px}}.h3-section>h3{margin-top:8px;margin-bottom:16px;white-space:nowrap;overflow:hidden}@media (max-width:768px){.h3-section>h3{margin-top:0}}.h3-section>h3::after{margin-left:24px;content:'';display:inline-block;vertical-align:middle;width:100%;height:1px;background:linear-gradient(to right,rgba(116,95,181,.2),transparent 80%)}.h3-section>.body>ul{margin:0;padding:0;list-style-type:none}.h3-section>.body>ul>li{padding:8px;padding-left:36px;position:relative}.h3-section>.body>ul>li>p{margin:0;padding:0}.h3-section>.body>ul>li::before{content:'';position:absolute;display:inline-block;width:4px;height:4px;background:#678;border-radius:50%;left:16px;top:18px}.h3-section>.body>ul>li+li{border-top:solid 1px rgba(102,119,136,.05)}.h3-section>.body>p{padding:16px;margin:0}.h3-section>.body>h4{font-size:11px;margin:0;padding:4px 16px;font-weight:400;background:#f8f9fa;color:#678}@media (min-width:480px) and (max-width:768px){.h3-section>.body>h4{font-size:calc(11px + 1 * ((100vw - 480px)/ 288))}}@media (min-width:768px) and (max-width:1280px){.h3-section>.body>h4{font-size:calc(12px + 0 * ((100vw - 768px)/ 512))}}@media (min-width:1280px){.h3-section>.body>h4{font-size:12px}}.h3-section>.body>h4+*{border-top:solid 1px rgba(102,119,136,.05)}.h3-section>.body>iframe~p,.h3-section>.body>pre~p,.h3-section>.body>table~p,.h3-section>.body>ul~p{background:#f8f9fa;color:#678}.h3-section>.body>iframe~p a,.h3-section>.body>iframe~p a:visited,.h3-section>.body>pre~p a,.h3-section>.body>pre~p a:visited,.h3-section>.body>table~p a,.h3-section>.body>table~p a:visited,.h3-section>.body>ul~p a,.h3-section>.body>ul~p a:visited{color:#345;text-decoration:none;border-bottom:solid 1px rgba(102,119,136,.05)}.h3-section>.body>iframe~p a:hover,.h3-section>.body>pre~p a:hover,.h3-section>.body>table~p a:hover,.h3-section>.body>ul~p a:hover{color:#26648e}.h3-section>.body>:not(:first-child){border-top:solid 1px rgba(102,119,136,.05)}.h3-section>.body>p+p,.h3-section>.body>p+p:not(:first-child){margin-top:-1.5em;border-top:0}@media (min-width:481px){.h3-section.-prime>.body{border-radius:2px;box-shadow:0 6px 8px rgba(102,119,136,.03),0 1px 2px rgba(102,119,136,.3),0 8px 12px rgba(58,193,203,.1)}}.h3-section-list{margin-left:-16px;margin-right:-16px;margin-top:0;margin-bottom:0}@media (max-width:1264px){.h3-section-list{margin-left:-8px}}@media (max-width:1264px){.h3-section-list{margin-right:-8px}}.h3-section-list::after{content:'';display:table;clear:both;zoom:1}.h3-section-list>.h3-section{padding:16px;float:left;width:100%}@media (max-width:1264px){.h3-section-list>.h3-section{padding:8px}}@media (min-width:769px){.h3-section-list>.h3-section{padding-top:0}}@media (min-width:769px){.h3-section-list.-two-column>.h3-section,.h3-section-list>.h3-section{width:50%}}.h3-section-list.-one-column>.h3-section{width:100%}.h3-section-list.-one-column>.h3-section+.h3-section{margin-top:16px}@media (min-width:769px){.h3-section-list.-three-column>.h3-section{width:50%}}@media (min-width:961px){.h3-section-list.-three-column>.h3-section{width:33.33%}}@media (min-width:769px){.h3-section-list.-left-reference>.h3-section{width:50%}}@media (min-width:961px){.h3-section-list.-left-reference>.h3-section{width:66.67%}.h3-section-list.-left-reference>.h3-section:first-child{width:33.33%}}.main-heading{margin:0;padding:0;margin-bottom:24px;margin-top:64px;position:relative}@media (max-width:768px){.main-heading{margin-bottom:8px;margin-top:32px}}@media (max-width:480px){.main-heading{margin-bottom:8px;margin-top:32px}}.main-heading{margin-top:0;margin-bottom:0}.main-heading>h1{font-size:40px;line-height:1.2;font-weight:200;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",sans-serif;margin:0}@media (min-width:480px) and (max-width:768px){.main-heading>h1{font-size:calc(40px + 6 * ((100vw - 480px)/ 288))}}@media (min-width:768px) and (max-width:1280px){.main-heading>h1{font-size:calc(46px + 3 * ((100vw - 768px)/ 512))}}@media (min-width:1280px){.main-heading>h1{font-size:49px}}.main-heading>h1>em{font-style:normal;color:#9eaab6}.main-heading.-center>h1{text-align:center}.main-heading.-center>.adbox{margin-top:16px;text-align:center}.main-heading.-center>.adbox>.ad{display:inline-block}.page-actions{margin:0;padding:0}.page-actions{height:32px}.page-actions>.link.link>a{display:inline-block;height:32px;line-height:32px;vertical-align:top;width:auto}.page-actions>li{margin:0;padding:0;list-style-type:none}.page-actions>li>a,.page-actions>li>a:visited{color:#678;text-decoration:none}.page-actions>li>a>.text{font-size:11px;display:none}@media (min-width:480px) and (max-width:768px){.page-actions>li>a>.text{font-size:calc(11px + 1 * ((100vw - 480px)/ 288))}}@media (min-width:768px) and (max-width:1280px){.page-actions>li>a>.text{font-size:calc(12px + 0 * ((100vw - 768px)/ 512))}}@media (min-width:1280px){.page-actions>li>a>.text{font-size:12px}}.page-actions>li>a>.text.-visible{display:inline}.page-actions+.page-actions{margin-left:8px}.page-actions>.facebook>a::before,.page-actions>.github>a::before,.page-actions>.twitter>a::before{content:'';vertical-align:middle}.page-actions>.facebook>a::before{display:inline-block;vertical-align:middle;background:url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%3E%3Cpath%20fill%3D%22rgb(51%2C68%2C85)%22%20d%3D%22M426.8%2064H85.2C73.5%2064%2064%2073.5%2064%2085.2v341.6c0%2011.7%209.5%2021.2%2021.2%2021.2H256V296h-45.9v-56H256v-41.4c0-49.6%2034.4-76.6%2078.7-76.6%2021.2%200%2044%201.6%2049.3%202.3v51.8h-35.3c-24.1%200-28.7%2011.4-28.7%2028.2V240h57.4l-7.5%2056H320v152h106.8c11.7%200%2021.2-9.5%2021.2-21.2V85.2c0-11.7-9.5-21.2-21.2-21.2z%22%2F%3E%3C%2Fsvg%3E") center center/16px 16px no-repeat;height:16px;width:16px}.page-actions>.twitter>a::before{display:inline-block;vertical-align:middle;background:url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22512%22%20height%3D%22512%22%20viewBox%3D%220%200%20512%20512%22%3E%3Cpath%20fill%3D%22rgb(51%2C68%2C85)%22%20d%3D%22M492%20109.5c-17.4%207.7-36%2012.9-55.6%2015.3%2020-12%2035.4-31%2042.6-53.6-18.7%2011.1-39.4%2019.2-61.5%2023.5C399.8%2075.8%20374.6%2064%20346.8%2064c-53.5%200-96.8%2043.4-96.8%2096.9%200%207.6.8%2015%202.5%2022.1-80.5-4-151.9-42.6-199.6-101.3-8.3%2014.3-13.1%2031-13.1%2048.7%200%2033.6%2017.2%2063.3%2043.2%2080.7-16-.4-31-4.8-44-12.1v1.2c0%2047%2033.4%2086.1%2077.7%2095-8.1%202.2-16.7%203.4-25.5%203.4-6.2%200-12.3-.6-18.2-1.8%2012.3%2038.5%2048.1%2066.5%2090.5%2067.3-33.1%2026-74.9%2041.5-120.3%2041.5-7.8%200-15.5-.5-23.1-1.4C62.8%20432%20113.7%20448%20168.3%20448%20346.6%20448%20444%20300.3%20444%20172.2c0-4.2-.1-8.4-.3-12.5C462.6%20146%20479%20129%20492%20109.5z%22%2F%3E%3C%2Fsvg%3E") center center/16px 16px no-repeat;height:16px;width:16px}.page-actions>.github>a::before{display:inline-block;vertical-align:middle;background:url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22512%22%20height%3D%22512%22%20viewBox%3D%220%200%20512%20512%22%3E%3Cpath%20fill%3D%22rgb(51%2C68%2C85)%22%20d%3D%22M256%2032C132.3%2032%2032%20134.9%2032%20261.7c0%20101.5%2064.2%20187.5%20153.2%20217.9%201.4.3%202.6.4%203.8.4%208.3%200%2011.5-6.1%2011.5-11.4%200-5.5-.2-19.9-.3-39.1-8.4%201.9-15.9%202.7-22.6%202.7-43.1%200-52.9-33.5-52.9-33.5-10.2-26.5-24.9-33.6-24.9-33.6-19.5-13.7-.1-14.1%201.4-14.1h.1c22.5%202%2034.3%2023.8%2034.3%2023.8%2011.2%2019.6%2026.2%2025.1%2039.6%2025.1%2010.5%200%2020-3.4%2025.6-6%202-14.8%207.8-24.9%2014.2-30.7-49.7-5.8-102-25.5-102-113.5%200-25.1%208.7-45.6%2023-61.6-2.3-5.8-10-29.2%202.2-60.8%200%200%201.6-.5%205-.5%208.1%200%2026.4%203.1%2056.6%2024.1%2017.9-5.1%2037-7.6%2056.1-7.7%2019%20.1%2038.2%202.6%2056.1%207.7%2030.2-21%2048.5-24.1%2056.6-24.1%203.4%200%205%20.5%205%20.5%2012.2%2031.6%204.5%2055%202.2%2060.8%2014.3%2016.1%2023%2036.6%2023%2061.6%200%2088.2-52.4%20107.6-102.3%20113.3%208%207.1%2015.2%2021.1%2015.2%2042.5%200%2030.7-.3%2055.5-.3%2063%200%205.4%203.1%2011.5%2011.4%2011.5%201.2%200%202.6-.1%204-.4C415.9%20449.2%20480%20363.1%20480%20261.7%20480%20134.9%20379.7%2032%20256%2032z%22%2F%3E%3C%2Fsvg%3E") center center/16px 16px no-repeat;height:16px;width:16px}.page-actions>.facebook>a::before,.page-actions>.twitter>a::before{width:32px;height:32px}.page-actions>.github>a::before{position:relative;top:-2px}.page-actions>.link.-button>a{box-shadow:inset 0 0 0 1px rgba(102,119,136,.2);border-radius:2px;padding:0 16px;margin:0 8px}.page-actions>.link.-button>a>.text{margin-left:4px;position:relative;top:-1px}@media (max-width:768px){.page-actions>.link{margin-left:16px}}.page-actions>.link:first-child>a{margin-left:0}.page-actions>.link:last-child>a{margin-right:0}.top-nav,.top-nav>.container{height:64px;line-height:64px;text-align:center;position:relative}@media (max-width:480px){.top-nav>.container{height:32px;line-height:32px;margin-top:8px}.top-nav{height:48px;padding:8px 0;border-bottom:solid 1px rgba(102,119,136,.2);margin-bottom:8px}}.top-nav>.container{padding-left:16px;padding-right:16px;max-width:1232px;margin:0 auto}@media (max-width:480px){.top-nav>.container{padding-left:16px}}@media (max-width:480px){.top-nav>.container{padding-right:16px}}.top-nav>.container{display:flex;align-items:center;position:relative}.top-nav>.container>.left{flex:0 0 auto;line-height:32px}.top-nav>.container>.brand{flex:1 1 auto}.top-nav>.container>.actions{flex:0 0 auto;display:flex}.top-nav>.container>.brand{font-size:11px;display:inline-block;font-weight:700;text-transform:uppercase;letter-spacing:.05em;text-decoration:none}@media (min-width:480px) and (max-width:768px){.top-nav>.container>.brand{font-size:calc(11px + 1 * ((100vw - 480px)/ 288))}}@media (min-width:768px) and (max-width:1280px){.top-nav>.container>.brand{font-size:calc(12px + 0 * ((100vw - 768px)/ 512))}}@media (min-width:1280px){.top-nav>.container>.brand{font-size:12px}}.top-nav>.container>.brand,.top-nav>.container>.brand:visited{color:#345}@media (max-width:480px){.top-nav>.container>.brand{display:none}.top-nav>.container>.actions{margin-left:auto}}@media (min-width:481px){.top-nav>.container>.actions{position:absolute;right:16px;top:16px}}@media (min-width:481px) and (max-width:480px){.top-nav>.container>.actions{right:16px}}@media (min-width:481px){.top-nav>.container>.left{position:absolute;left:16px;top:16px}}@media (min-width:481px) and (max-width:480px){.top-nav>.container>.left{left:16px}}@media (min-width:1232px){.top-nav>.container>.left>.home{position:relative;left:-16px}}</style>

<script id="critical-css-disable">if (~window.location.search.indexOf('nocrit')){;[].slice.call(document.querySelectorAll('#critical-css')).map(function(e){e.parentNode.removeChild(e)})}</script>

<script id="deferred-css">;(function(links){(requestAnimationFrame||mozRequestAnimationFrame||webkitRequestAnimationFrame||msRequestAnimationFrame||(function(fn){window.addEventListener('load',fn)}))(function(){var h=document.getElementsByTagName('head')[0],l,i;for (i=0;i<links.length;i++){l=document.createElement('link');l.rel='stylesheet';l.href=links[i];h.appendChild(l);}})})([
'https://fonts.googleapis.com/css?family=Cousine',
'./assets/2017/style.css?t=20191015093217'
])</script>
<noscript id="deferred-css-fallback">
<link rel='stylesheet' href='https://fonts.googleapis.com/css?family=Cousine'>
<link rel='stylesheet' href='./assets/2017/style.css?t=20191015093217'>
</noscript>
<script type="application/ld+json">
{
  "@context": "http://schema.org",
  "@type": "NewsArticle",
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": "https://google.com/article"
  },
  "headline": "Bash scripting cheatsheet",
  "image": [ "https://assets.devhints.io/previews/bash.jpg?t=20191015093217" ],
  "description": "Variables · Functions · Interpolation · Brace expansions · Loops · Conditional execution · Command substitution · One-page guide to Bash scripting"
}
</script>
<script type="application/ld+json">
{
  "@context": "http://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": [{
    "@type": "ListItem",
    "position": 1,
    "item": {
      "@id": "https://devhints.io/#cli",
      "name": "CLI"
    }
  },{
    "@type": "ListItem",
    "position": 2,
    "item": {
      "@id": "https://devhints.io/bash",
      "name": "Bash scripting"
    }
  }]
}
</script>
<link rel="stylesheet" href="./Bash scripting cheatsheet_files/css"><link rel="stylesheet" href="./Bash scripting cheatsheet_files/style.css"><style type="text/css">pre[data-line]{position:relative;padding:1em 0 1em 3em}.line-highlight{position:absolute;left:0;right:0;padding:inherit 0;margin-top:1em;background:hsla(24,20%,50%,.08);background:linear-gradient(90deg,hsla(24,20%,50%,.1) 70%,hsla(24,20%,50%,0));pointer-events:none;line-height:inherit;white-space:pre}.line-highlight:before,.line-highlight[data-end]:after{content:attr(data-start);position:absolute;top:.4em;left:.6em;min-width:1em;padding:0 .5em;background-color:hsla(24,20%,50%,.4);color:#f5f2f0;font:700 65%/1.5 sans-serif;text-align:center;vertical-align:.3em;border-radius:999px;text-shadow:none;box-shadow:0 1px #fff}.line-highlight[data-end]:after{content:attr(data-end);top:auto;bottom:.4em}</style><style type="text/css">/*! Hint.css - v2.5.0 - 2017-04-23
* http://kushagragour.in/lab/hint/
* Copyright (c) 2017 Kushagra Gour */[class*=hint--]{position:relative;display:inline-block}[class*=hint--]:after,[class*=hint--]:before{position:absolute;-webkit-transform:translateZ(0);-moz-transform:translateZ(0);transform:translateZ(0);visibility:hidden;opacity:0;z-index:1000000;pointer-events:none;-webkit-transition:.3s ease;-moz-transition:.3s ease;transition:.3s ease;-webkit-transition-delay:0s;-moz-transition-delay:0s;transition-delay:0s}[class*=hint--]:hover:after,[class*=hint--]:hover:before{visibility:visible;opacity:1;-webkit-transition-delay:.1s;-moz-transition-delay:.1s;transition-delay:.1s}[class*=hint--]:before{content:"";position:absolute;background:0 0;border:6px solid transparent;z-index:1000001}[class*=hint--]:after{background:#383838;color:#fff;padding:8px 10px;font-size:12px;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;line-height:12px;white-space:nowrap;text-shadow:0 -1px 0 #000;box-shadow:4px 4px 8px rgba(0,0,0,.3)}[class*=hint--][aria-label]:after{content:attr(aria-label)}[class*=hint--][data-hint]:after{content:attr(data-hint)}[aria-label=""]:after,[aria-label=""]:before,[data-hint=""]:after,[data-hint=""]:before{display:none!important}.hint--top-left:before,.hint--top-right:before,.hint--top:before{border-top-color:#383838}.hint--bottom-left:before,.hint--bottom-right:before,.hint--bottom:before{border-bottom-color:#383838}.hint--top:after,.hint--top:before{bottom:100%;left:50%}.hint--top:before{margin-bottom:-11px;left:calc(50% - 6px)}.hint--top:after{-webkit-transform:translateX(-50%);-moz-transform:translateX(-50%);transform:translateX(-50%)}.hint--top:hover:before{-webkit-transform:translateY(-8px);-moz-transform:translateY(-8px);transform:translateY(-8px)}.hint--top:hover:after{-webkit-transform:translateX(-50%) translateY(-8px);-moz-transform:translateX(-50%) translateY(-8px);transform:translateX(-50%) translateY(-8px)}.hint--bottom:after,.hint--bottom:before{top:100%;left:50%}.hint--bottom:before{margin-top:-11px;left:calc(50% - 6px)}.hint--bottom:after{-webkit-transform:translateX(-50%);-moz-transform:translateX(-50%);transform:translateX(-50%)}.hint--bottom:hover:before{-webkit-transform:translateY(8px);-moz-transform:translateY(8px);transform:translateY(8px)}.hint--bottom:hover:after{-webkit-transform:translateX(-50%) translateY(8px);-moz-transform:translateX(-50%) translateY(8px);transform:translateX(-50%) translateY(8px)}.hint--right:before{border-right-color:#383838;margin-left:-11px;margin-bottom:-6px}.hint--right:after{margin-bottom:-14px}.hint--right:after,.hint--right:before{left:100%;bottom:50%}.hint--right:hover:after,.hint--right:hover:before{-webkit-transform:translateX(8px);-moz-transform:translateX(8px);transform:translateX(8px)}.hint--left:before{border-left-color:#383838;margin-right:-11px;margin-bottom:-6px}.hint--left:after{margin-bottom:-14px}.hint--left:after,.hint--left:before{right:100%;bottom:50%}.hint--left:hover:after,.hint--left:hover:before{-webkit-transform:translateX(-8px);-moz-transform:translateX(-8px);transform:translateX(-8px)}.hint--top-left:after,.hint--top-left:before{bottom:100%;left:50%}.hint--top-left:before{margin-bottom:-11px;left:calc(50% - 6px)}.hint--top-left:after{-webkit-transform:translateX(-100%);-moz-transform:translateX(-100%);transform:translateX(-100%);margin-left:12px}.hint--top-left:hover:before{-webkit-transform:translateY(-8px);-moz-transform:translateY(-8px);transform:translateY(-8px)}.hint--top-left:hover:after{-webkit-transform:translateX(-100%) translateY(-8px);-moz-transform:translateX(-100%) translateY(-8px);transform:translateX(-100%) translateY(-8px)}.hint--top-right:after,.hint--top-right:before{bottom:100%;left:50%}.hint--top-right:before{margin-bottom:-11px;left:calc(50% - 6px)}.hint--top-right:after{-webkit-transform:translateX(0);-moz-transform:translateX(0);transform:translateX(0);margin-left:-12px}.hint--top-right:hover:after,.hint--top-right:hover:before{-webkit-transform:translateY(-8px);-moz-transform:translateY(-8px);transform:translateY(-8px)}.hint--bottom-left:after,.hint--bottom-left:before{top:100%;left:50%}.hint--bottom-left:before{margin-top:-11px;left:calc(50% - 6px)}.hint--bottom-left:after{-webkit-transform:translateX(-100%);-moz-transform:translateX(-100%);transform:translateX(-100%);margin-left:12px}.hint--bottom-left:hover:before{-webkit-transform:translateY(8px);-moz-transform:translateY(8px);transform:translateY(8px)}.hint--bottom-left:hover:after{-webkit-transform:translateX(-100%) translateY(8px);-moz-transform:translateX(-100%) translateY(8px);transform:translateX(-100%) translateY(8px)}.hint--bottom-right:after,.hint--bottom-right:before{top:100%;left:50%}.hint--bottom-right:before{margin-top:-11px;left:calc(50% - 6px)}.hint--bottom-right:after{-webkit-transform:translateX(0);-moz-transform:translateX(0);transform:translateX(0);margin-left:-12px}.hint--bottom-right:hover:after,.hint--bottom-right:hover:before{-webkit-transform:translateY(8px);-moz-transform:translateY(8px);transform:translateY(8px)}.hint--large:after,.hint--medium:after,.hint--small:after{white-space:normal;line-height:1.4em;word-wrap:break-word}.hint--small:after{width:80px}.hint--medium:after{width:150px}.hint--large:after{width:300px}.hint--error:after{background-color:#b34e4d;text-shadow:0 -1px 0 #592726}.hint--error.hint--top-left:before,.hint--error.hint--top-right:before,.hint--error.hint--top:before{border-top-color:#b34e4d}.hint--error.hint--bottom-left:before,.hint--error.hint--bottom-right:before,.hint--error.hint--bottom:before{border-bottom-color:#b34e4d}.hint--error.hint--left:before{border-left-color:#b34e4d}.hint--error.hint--right:before{border-right-color:#b34e4d}.hint--warning:after{background-color:#c09854;text-shadow:0 -1px 0 #6c5328}.hint--warning.hint--top-left:before,.hint--warning.hint--top-right:before,.hint--warning.hint--top:before{border-top-color:#c09854}.hint--warning.hint--bottom-left:before,.hint--warning.hint--bottom-right:before,.hint--warning.hint--bottom:before{border-bottom-color:#c09854}.hint--warning.hint--left:before{border-left-color:#c09854}.hint--warning.hint--right:before{border-right-color:#c09854}.hint--info:after{background-color:#3986ac;text-shadow:0 -1px 0 #1a3c4d}.hint--info.hint--top-left:before,.hint--info.hint--top-right:before,.hint--info.hint--top:before{border-top-color:#3986ac}.hint--info.hint--bottom-left:before,.hint--info.hint--bottom-right:before,.hint--info.hint--bottom:before{border-bottom-color:#3986ac}.hint--info.hint--left:before{border-left-color:#3986ac}.hint--info.hint--right:before{border-right-color:#3986ac}.hint--success:after{background-color:#458746;text-shadow:0 -1px 0 #1a321a}.hint--success.hint--top-left:before,.hint--success.hint--top-right:before,.hint--success.hint--top:before{border-top-color:#458746}.hint--success.hint--bottom-left:before,.hint--success.hint--bottom-right:before,.hint--success.hint--bottom:before{border-bottom-color:#458746}.hint--success.hint--left:before{border-left-color:#458746}.hint--success.hint--right:before{border-right-color:#458746}.hint--always:after,.hint--always:before{opacity:1;visibility:visible}.hint--always.hint--top:before{-webkit-transform:translateY(-8px);-moz-transform:translateY(-8px);transform:translateY(-8px)}.hint--always.hint--top:after{-webkit-transform:translateX(-50%) translateY(-8px);-moz-transform:translateX(-50%) translateY(-8px);transform:translateX(-50%) translateY(-8px)}.hint--always.hint--top-left:before{-webkit-transform:translateY(-8px);-moz-transform:translateY(-8px);transform:translateY(-8px)}.hint--always.hint--top-left:after{-webkit-transform:translateX(-100%) translateY(-8px);-moz-transform:translateX(-100%) translateY(-8px);transform:translateX(-100%) translateY(-8px)}.hint--always.hint--top-right:after,.hint--always.hint--top-right:before{-webkit-transform:translateY(-8px);-moz-transform:translateY(-8px);transform:translateY(-8px)}.hint--always.hint--bottom:before{-webkit-transform:translateY(8px);-moz-transform:translateY(8px);transform:translateY(8px)}.hint--always.hint--bottom:after{-webkit-transform:translateX(-50%) translateY(8px);-moz-transform:translateX(-50%) translateY(8px);transform:translateX(-50%) translateY(8px)}.hint--always.hint--bottom-left:before{-webkit-transform:translateY(8px);-moz-transform:translateY(8px);transform:translateY(8px)}.hint--always.hint--bottom-left:after{-webkit-transform:translateX(-100%) translateY(8px);-moz-transform:translateX(-100%) translateY(8px);transform:translateX(-100%) translateY(8px)}.hint--always.hint--bottom-right:after,.hint--always.hint--bottom-right:before{-webkit-transform:translateY(8px);-moz-transform:translateY(8px);transform:translateY(8px)}.hint--always.hint--left:after,.hint--always.hint--left:before{-webkit-transform:translateX(-8px);-moz-transform:translateX(-8px);transform:translateX(-8px)}.hint--always.hint--right:after,.hint--always.hint--right:before{-webkit-transform:translateX(8px);-moz-transform:translateX(8px);transform:translateX(8px)}.hint--rounded:after{border-radius:4px}.hint--no-animate:after,.hint--no-animate:before{-webkit-transition-duration:0s;-moz-transition-duration:0s;transition-duration:0s}.hint--bounce:after,.hint--bounce:before{-webkit-transition:opacity .3s ease,visibility .3s ease,-webkit-transform .3s cubic-bezier(.71,1.7,.77,1.24);-moz-transition:opacity .3s ease,visibility .3s ease,-moz-transform .3s cubic-bezier(.71,1.7,.77,1.24);transition:opacity .3s ease,visibility .3s ease,transform .3s cubic-bezier(.71,1.7,.77,1.24)}</style><script src="./Bash scripting cheatsheet_files/embed.js" data-timestamp="1573353901116"></script><script src="./Bash scripting cheatsheet_files/count.js" id="dsq-count-scr" async=""></script><link rel="prefetch" as="style" href="https://c.disquscdn.com/next/embed/styles/lounge.953a2bd009935f47a8e815c3ee2bfc5a.css"><link rel="prefetch" as="script" href="https://c.disquscdn.com/next/embed/common.bundle.3ec876f0dd63f3552e71b17b94e297ec.js"><link rel="prefetch" as="script" href="https://c.disquscdn.com/next/embed/lounge.bundle.ae2c759244193264ec2a1bfbfc626d7e.js"><link rel="prefetch" as="script" href="https://disqus.com/next/config.js"><script src="./Bash scripting cheatsheet_files/count-data.js"></script></head><body>
<nav class="top-nav" data-js-no-preview="" role="navigation">
<div class="container">
<div class="left">
<a class="home back-button" href="https://devhints.io/"></a>
</div>
<a class="brand" href="https://devhints.io/">
Devhints.io
</a>
<div class="actions">
<ul class="social-list social page-actions">
<li class="facebook link hint--bottom" data-hint="Share on Facebook"><a href="https://www.facebook.com/sharer/sharer.php?u=https://devhints.io/bash.html" target="share"><span class="text"></span></a></li>
<li class="twitter link hint--bottom" data-hint="Share on Twitter"><a href="https://twitter.com/intent/tweet?text=The%20ultimate%20cheatsheet%20for%20Bash%20scripting.%20https://devhints.io/bash.html" target="share"><span class="text"></span></a></li>
</ul>
<ul class="page-actions">
<li class="link github -button hint--bottom" data-hint="Edit this page on GitHub">
<a href="https://github.com/rstacruz/cheatsheets/blob/master/bash.md">
<span class="text -visible">Edit</span>
</a>
</li>
</ul>
</div>
</div>
</nav>
<div class="body-area">
<header class="main-heading -center" role="banner">
<h1 class="h1">Bash scripting <em>cheatsheet</em></h1>
<div class="adbox" data-js-no-preview="">
<div class="ad -codefund" role="complementary">
<aside class="codefund-sponsor" data-js-no-preview="">
<div id="codefund"><div id="cf"> <div class="cf-wrapper" style="max-width: 330px; display: block; font-size: 14px; line-height: 1.4; font-family: Helvetica, Arial; margin-left: auto; margin-right: auto; padding: 15px;" align="center"> <div class="cf-header" style="font-size: 12px; color: #678; display: block; margin-bottom: 8px;">Proudly sponsored by</div> <a data-href="campaign_url" class="cf-text" target="_blank" rel="sponsored noopener" style="box-shadow: none !important; color: #333; text-decoration: none;" href="https://codefund.app/impressions/dfd4836d-5b5b-4488-87f4-aacde9343120/click?campaign_id=550&amp;creative_id=425&amp;property_id=51&amp;template=centered&amp;theme=light"> <strong>Try Buildkite!</strong> <span>Fast, secure, and scalable CI/CD for all your software projects.</span> </a> <a href="https://codefund.app/invite/lN4RA92tcuA" data-target="powered_by_url" class="cf-powered-by" target="_blank" rel="sponsored noopener" style="box-shadow: none !important; margin-top: 5px; font-size: 11px; display: block; color: #678; text-decoration: none; text-align: center;"> <em>ethical</em> ad by CodeFund <img data-src="impression_url" alt="" style="position: fixed; left: -1000px; top: -1000px;" src="./Bash scripting cheatsheet_files/pixel.gif"> </a> </div> </div> <style>#cf .cf-header:before { content: " "; margin: 0 0.5em; opacity: 0.5; } #cf .cf-header:after { content: " "; margin: 0 0.5em; opacity: 0.5; } </style></div>
<script src="./Bash scripting cheatsheet_files/funder.js" async="async"></script>
<script type="text/javascript">var abp;</script>
<script type="text/javascript" src="./Bash scripting cheatsheet_files/px.js"></script>
<script type="text/javascript" src="./Bash scripting cheatsheet_files/px(1).js"></script>
</aside>
</div>
</div>
</header>
<main class="post-content MarkdownBody -wrapified" data-js-main-body="" data-js-anchors="" role="main">
<div class="h2-section -three-column"><h2 class="-three-column" id="getting-started"><a href="https://devhints.io/bash#getting-started" class="local-anchor anchor">#</a>Getting started</h2><div class="body h3-section-list -three-column" data-js-h3-section-list="" style="position: relative; height: 736px;">
<div class="h3-section" style="position: absolute; left: 0px; top: 0px;"><h3 id="example">Example</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token comment" spellcheck="true">#!/usr/bin/env bash</span>

NAME<span class="token operator">=</span><span class="token string">"John"</span>
<span class="token keyword">echo</span> <span class="token string">"Hello <span class="token variable">$NAME!</span>"</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 410px; top: 0px;"><h3 id="variables">Variables</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash">NAME<span class="token operator">=</span><span class="token string">"John"</span>
<span class="token keyword">echo</span> <span class="token variable">$NAME</span>
<span class="token keyword">echo</span> <span class="token string">"<span class="token variable">$NAME</span>"</span>
<span class="token keyword">echo</span> <span class="token string">"<span class="token variable">${NAME}</span>!"</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 821px; top: 0px;"><h3 id="string-quotes">String quotes</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash">NAME<span class="token operator">=</span><span class="token string">"John"</span>
<span class="token keyword">echo</span> <span class="token string">"Hi <span class="token variable">$NAME</span>"</span>  <span class="token comment" spellcheck="true">#=&gt; Hi John</span>
<span class="token keyword">echo</span> <span class="token string">'Hi <span class="token variable">$NAME</span>'</span>  <span class="token comment" spellcheck="true">#=&gt; Hi $NAME</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 821px; top: 162px;"><h3 id="shell-execution">Shell execution</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">echo</span> <span class="token string">"I'm in <span class="token variable"><span class="token variable">$(</span><span class="token function">pwd</span><span class="token variable">)</span></span>"</span>
<span class="token keyword">echo</span> <span class="token string">"I'm in <span class="token variable"><span class="token variable">`</span><span class="token function">pwd</span><span class="token variable">`</span></span>"</span>
<span class="token comment" spellcheck="true"># Same</span>
</code></pre>
<p>See <a href="http://wiki.bash-hackers.org/syntax/expansion/cmdsubst">Command substitution</a></p>
</div></div><div class="h3-section" style="position: absolute; left: 0px; top: 182px;"><h3 id="conditional-execution">Conditional execution</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token function">git</span> commit <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> push
<span class="token function">git</span> commit <span class="token operator">||</span> <span class="token keyword">echo</span> <span class="token string">"Commit failed"</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 410px; top: 182px;"><h3 id="functions-example">Functions</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash">get_name<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">echo</span> <span class="token string">"John"</span>
<span class="token punctuation">}</span>

<span class="token keyword">echo</span> <span class="token string">"You are <span class="token variable"><span class="token variable">$(</span>get_name<span class="token variable">)</span></span>"</span>
</code></pre>
<p>See: <a href="https://devhints.io/bash#functions">Functions</a></p>
</div></div><div class="h3-section" style="position: absolute; left: 0px; top: 324px;"><h3 id="conditionals-example">Conditionals</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> -z <span class="token string">"<span class="token variable">$string</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token keyword">echo</span> <span class="token string">"String is empty"</span>
<span class="token keyword">elif</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> -n <span class="token string">"<span class="token variable">$string</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token keyword">echo</span> <span class="token string">"String is not empty"</span>
<span class="token keyword">fi</span>
</code></pre>
<p>See: <a href="https://devhints.io/bash#conditionals">Conditionals</a></p>
</div></div><div class="h3-section" style="position: absolute; left: 821px; top: 379px;"><h3 id="strict-mode">Strict mode</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">set</span> -euo pipefail
IFS<span class="token operator">=</span>$<span class="token string">'\n\t'</span>
</code></pre>
<p>See: <a href="http://redsymbol.net/articles/unofficial-bash-strict-mode/">Unofficial bash strict mode</a></p>
</div></div><div class="h3-section" style="position: absolute; left: 410px; top: 439px;"><h3 id="brace-expansion">Brace expansion</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">echo</span> <span class="token punctuation">{</span>A,B<span class="token punctuation">}</span>.js
</code></pre>
<table>
<tbody>
<tr>
<td><code>{A,B}</code></td>
<td>Same as <code>A B</code></td>
</tr>
<tr>
<td><code>{A,B}.js</code></td>
<td>Same as <code>A.js B.js</code></td>
</tr>
<tr>
<td><code>{1..5}</code></td>
<td>Same as <code>1 2 3 4 5</code></td>
</tr>
</tbody>
</table>
<p>See: <a href="http://wiki.bash-hackers.org/syntax/expansion/brace">Brace expansion</a></p>
</div></div></div></div><div class="h2-section -three-column"><h2 class="-three-column" id="parameter-expansions"><a href="https://devhints.io/bash#parameter-expansions" class="local-anchor anchor">#</a>Parameter expansions</h2><div class="body h3-section-list -three-column" data-js-h3-section-list="" style="position: relative; height: 849px;">
<div class="h3-section" style="position: absolute; left: 0px; top: 0px;"><h3 id="basics">Basics</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash">name<span class="token operator">=</span><span class="token string">"John"</span>
<span class="token keyword">echo</span> <span class="token variable">${name}</span>
<span class="token keyword">echo</span> <span class="token variable">${name/J/j}</span>    <span class="token comment" spellcheck="true">#=&gt; "john" (substitution)</span>
<span class="token keyword">echo</span> <span class="token variable">${name:0:2}</span>    <span class="token comment" spellcheck="true">#=&gt; "Jo" (slicing)</span>
<span class="token keyword">echo</span> <span class="token variable">${name::2}</span>     <span class="token comment" spellcheck="true">#=&gt; "Jo" (slicing)</span>
<span class="token keyword">echo</span> <span class="token variable">${name::-1}</span>    <span class="token comment" spellcheck="true">#=&gt; "Joh" (slicing)</span>
<span class="token keyword">echo</span> <span class="token variable">${name:(-1)}</span>   <span class="token comment" spellcheck="true">#=&gt; "n" (slicing from right)</span>
<span class="token keyword">echo</span> <span class="token variable">${name:(-2):1}</span> <span class="token comment" spellcheck="true">#=&gt; "h" (slicing from right)</span>
<span class="token keyword">echo</span> <span class="token variable">${food:-Cake}</span>  <span class="token comment" spellcheck="true">#=&gt; $food or "Cake"</span>
</code></pre>
<pre class=" language-bash"><code class=" language-bash">length<span class="token operator">=</span>2
<span class="token keyword">echo</span> <span class="token variable">${name:0:length}</span>  <span class="token comment" spellcheck="true">#=&gt; "Jo"</span>
</code></pre>
<p>See: <a href="http://wiki.bash-hackers.org/syntax/pe">Parameter expansion</a></p>
<pre class=" language-bash"><code class=" language-bash">STR<span class="token operator">=</span><span class="token string">"/path/to/foo.cpp"</span>
<span class="token keyword">echo</span> <span class="token variable">${STR%.cpp}</span>    <span class="token comment" spellcheck="true"># /path/to/foo</span>
<span class="token keyword">echo</span> <span class="token variable">${STR%.cpp}</span>.o  <span class="token comment" spellcheck="true"># /path/to/foo.o</span>

<span class="token keyword">echo</span> $<span class="token punctuation">{</span>STR<span class="token comment" spellcheck="true">##*.}     # cpp (extension)</span>
<span class="token keyword">echo</span> $<span class="token punctuation">{</span>STR<span class="token comment" spellcheck="true">##*/}     # foo.cpp (basepath)</span>

<span class="token keyword">echo</span> $<span class="token punctuation">{</span>STR<span class="token comment" spellcheck="true">#*/}      # path/to/foo.cpp</span>
<span class="token keyword">echo</span> $<span class="token punctuation">{</span>STR<span class="token comment" spellcheck="true">##*/}     # foo.cpp</span>

<span class="token keyword">echo</span> <span class="token variable">${STR/foo/bar}</span> <span class="token comment" spellcheck="true"># /path/to/bar.cpp</span>
</code></pre>
<pre class=" language-bash"><code class=" language-bash">STR<span class="token operator">=</span><span class="token string">"Hello world"</span>
<span class="token keyword">echo</span> <span class="token variable">${STR:6:5}</span>   <span class="token comment" spellcheck="true"># "world"</span>
<span class="token keyword">echo</span> <span class="token variable">${STR:-5:5}</span>  <span class="token comment" spellcheck="true"># "world"</span>
</code></pre>
<pre class=" language-bash"><code class=" language-bash">SRC<span class="token operator">=</span><span class="token string">"/path/to/foo.cpp"</span>
BASE<span class="token operator">=</span>$<span class="token punctuation">{</span>SRC<span class="token comment" spellcheck="true">##*/}   #=&gt; "foo.cpp" (basepath)</span>
DIR<span class="token operator">=</span><span class="token variable">${SRC%$BASE}</span>  <span class="token comment" spellcheck="true">#=&gt; "/path/to/" (dirpath)</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 410px; top: 0px;"><h3 id="substitution">Substitution</h3><div class="body">
<table>
<thead>
<tr>
<th>Code</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>${FOO%suffix}</code></td>
<td>Remove suffix</td>
</tr>
<tr>
<td><code>${FOO#prefix}</code></td>
<td>Remove prefix</td>
</tr>
</tbody>
<tbody>
<tr>
<td><code>${FOO%%suffix}</code></td>
<td>Remove long suffix</td>
</tr>
<tr>
<td><code>${FOO##prefix}</code></td>
<td>Remove long prefix</td>
</tr>
</tbody>
<tbody>
<tr>
<td><code>${FOO/from/to}</code></td>
<td>Replace first match</td>
</tr>
<tr>
<td><code>${FOO//from/to}</code></td>
<td>Replace all</td>
</tr>
</tbody>
<tbody>
<tr>
<td><code>${FOO/%from/to}</code></td>
<td>Replace suffix</td>
</tr>
<tr>
<td><code>${FOO/#from/to}</code></td>
<td>Replace prefix</td>
</tr>
</tbody>
</table>
</div></div><div class="h3-section" style="position: absolute; left: 821px; top: 0px;"><h3 id="comments">Comments</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token comment" spellcheck="true"># Single line comment</span>
</code></pre>
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">:</span> <span class="token string">'
This is a
multi line
comment
'</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 821px; top: 255px;"><h3 id="substrings">Substrings</h3><div class="body">
<table>
<tbody>
<tr>
<td><code>${FOO:0:3}</code></td>
<td>Substring <em>(position, length)</em></td>
</tr>
<tr>
<td><code>${FOO:-3:3}</code></td>
<td>Substring from the right</td>
</tr>
</tbody>
</table>
</div></div><div class="h3-section" style="position: absolute; left: 410px; top: 389px;"><h3 id="length">Length</h3><div class="body">
<table>
<tbody>
<tr>
<td><code>${#FOO}</code></td>
<td>Length of <code>$FOO</code></td>
</tr>
</tbody>
</table>
</div></div><div class="h3-section" style="position: absolute; left: 821px; top: 404px;"><h3 id="manipulation">Manipulation</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash">STR<span class="token operator">=</span><span class="token string">"HELLO WORLD!"</span>
<span class="token keyword">echo</span> <span class="token variable">${STR,}</span>   <span class="token comment" spellcheck="true">#=&gt; "hELLO WORLD!" (lowercase 1st letter)</span>
<span class="token keyword">echo</span> <span class="token variable">${STR,,}</span>  <span class="token comment" spellcheck="true">#=&gt; "hello world!" (all lowercase)</span>

STR<span class="token operator">=</span><span class="token string">"hello world!"</span>
<span class="token keyword">echo</span> <span class="token variable">${STR^}</span>   <span class="token comment" spellcheck="true">#=&gt; "Hello world!" (uppercase 1st letter)</span>
<span class="token keyword">echo</span> <span class="token variable">${STR^^}</span>  <span class="token comment" spellcheck="true">#=&gt; "HELLO WORLD!" (all uppercase)</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 410px; top: 498px;"><h3 id="default-values">Default values</h3><div class="body">
<table>
<tbody>
<tr>
<td><code>${FOO:-val}</code></td>
<td><code>$FOO</code>, or <code>val</code> if not set</td>
</tr>
<tr>
<td><code>${FOO:=val}</code></td>
<td>Set <code>$FOO</code> to <code>val</code> if not set</td>
</tr>
<tr>
<td><code>${FOO:+val}</code></td>
<td><code>val</code> if <code>$FOO</code> is set</td>
</tr>
<tr>
<td><code>${FOO:?message}</code></td>
<td>Show error message and exit if <code>$FOO</code> is not set</td>
</tr>
</tbody>
</table>
<p>The <code>:</code> is optional (eg, <code>${FOO=word}</code> works)</p>
</div></div></div></div><div class="h2-section -three-column"><h2 class="-three-column" id="loops"><a href="https://devhints.io/bash#loops" class="local-anchor anchor">#</a>Loops</h2><div class="body h3-section-list -three-column" data-js-h3-section-list="" style="position: relative; height: 324px;">
<div class="h3-section" style="position: absolute; left: 0px; top: 0px;"><h3 id="basic-for-loop">Basic for loop</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">for</span> i <span class="token keyword">in</span> /etc/rc.*<span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token keyword">echo</span> <span class="token variable">$i</span>
<span class="token keyword">done</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 410px; top: 0px;"><h3 id="c-like-for-loop">C-like for loop</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">for</span> <span class="token variable"><span class="token punctuation">((</span>i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span> <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token keyword">echo</span> <span class="token variable">$i</span>
<span class="token keyword">done</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 821px; top: 0px;"><h3 id="ranges">Ranges</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">{</span>1<span class="token punctuation">..</span>5<span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token keyword">echo</span> <span class="token string">"Welcome <span class="token variable">$i</span>"</span>
<span class="token keyword">done</span>
</code></pre>
<h4 id="with-step-size">With step size</h4>
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">{</span>5<span class="token punctuation">..</span>50<span class="token punctuation">..</span>5<span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token keyword">echo</span> <span class="token string">"Welcome <span class="token variable">$i</span>"</span>
<span class="token keyword">done</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 0px; top: 162px;"><h3 id="reading-lines">Reading lines</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token operator">&lt;</span> file.txt <span class="token operator">|</span> <span class="token keyword">while</span> <span class="token function">read</span> line<span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token keyword">echo</span> <span class="token variable">$line</span>
<span class="token keyword">done</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 410px; top: 162px;"><h3 id="forever">Forever</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">while</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  ···
<span class="token keyword">done</span>
</code></pre>
</div></div></div></div><div class="h2-section -three-column"><h2 class="-three-column" id="functions"><a href="https://devhints.io/bash#functions" class="local-anchor anchor">#</a>Functions</h2><div class="body h3-section-list -three-column" data-js-h3-section-list="" style="position: relative; height: 519px;">
<div class="h3-section" style="position: absolute; left: 0px; top: 0px;"><h3 id="defining-functions">Defining functions</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash">myfunc<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string">"hello <span class="token variable">$1</span>"</span>
<span class="token punctuation">}</span>
</code></pre>
<pre class=" language-bash"><code class=" language-bash"><span class="token comment" spellcheck="true"># Same as above (alternate syntax)</span>
<span class="token keyword">function</span> myfunc<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string">"hello <span class="token variable">$1</span>"</span>
<span class="token punctuation">}</span>
</code></pre>
<pre class=" language-bash"><code class=" language-bash">myfunc <span class="token string">"John"</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 410px; top: 0px;"><h3 id="returning-values">Returning values</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash">myfunc<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    local myresult<span class="token operator">=</span><span class="token string">'some value'</span>
    <span class="token keyword">echo</span> <span class="token variable">$myresult</span>
<span class="token punctuation">}</span>
</code></pre>
<pre class=" language-bash"><code class=" language-bash">result<span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span>myfunc<span class="token variable">)</span></span>"</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 821px; top: 0px;"><h3 id="raising-errors">Raising errors</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash">myfunc<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> 1
<span class="token punctuation">}</span>
</code></pre>
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">if</span> myfunc<span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token keyword">echo</span> <span class="token string">"success"</span>
<span class="token keyword">else</span>
  <span class="token keyword">echo</span> <span class="token string">"failure"</span>
<span class="token keyword">fi</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 410px; top: 235px;"><h3 id="arguments">Arguments</h3><div class="body">
<table>
<thead>
<tr>
<th>Expression</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>$#</code></td>
<td>Number of arguments</td>
</tr>
<tr>
<td><code>$*</code></td>
<td>All arguments</td>
</tr>
<tr>
<td><code>$@</code></td>
<td>All arguments, starting from first</td>
</tr>
<tr>
<td><code>$1</code></td>
<td>First argument</td>
</tr>
</tbody>
</table>
<p>See <a href="http://wiki.bash-hackers.org/syntax/shellvars#special_parameters_and_shell_variables">Special parameters</a>.</p>
</div></div></div></div><div class="h2-section -three-column"><h2 class="-three-column" id="conditionals"><a href="https://devhints.io/bash#conditionals" class="local-anchor anchor">#</a>Conditionals</h2><div class="body h3-section-list -three-column" data-js-h3-section-list="" style="position: relative; height: 855px;">
<div class="h3-section" style="position: absolute; left: 0px; top: 0px;"><h3 id="conditions">Conditions</h3><div class="body">
<p>Note that <code>[[</code> is actually a command/program that returns either <code>0</code> (true) or <code>1</code> (false). Any program that obeys the same logic (like all base utils, such as <code>grep(1)</code> or <code>ping(1)</code>) can be used as condition, see examples.</p>
<table>
<thead>
<tr>
<th>Condition</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>[[ -z STRING ]]</code></td>
<td>Empty string</td>
</tr>
<tr>
<td><code>[[ -n STRING ]]</code></td>
<td>Not empty string</td>
</tr>
<tr>
<td><code>[[ STRING == STRING ]]</code></td>
<td>Equal</td>
</tr>
<tr>
<td><code>[[ STRING != STRING ]]</code></td>
<td>Not Equal</td>
</tr>
</tbody>
<tbody>
<tr>
<td><code>[[ NUM -eq NUM ]]</code></td>
<td>Equal</td>
</tr>
<tr>
<td><code>[[ NUM -ne NUM ]]</code></td>
<td>Not equal</td>
</tr>
<tr>
<td><code>[[ NUM -lt NUM ]]</code></td>
<td>Less than</td>
</tr>
<tr>
<td><code>[[ NUM -le NUM ]]</code></td>
<td>Less than or equal</td>
</tr>
<tr>
<td><code>[[ NUM -gt NUM ]]</code></td>
<td>Greater than</td>
</tr>
<tr>
<td><code>[[ NUM -ge NUM ]]</code></td>
<td>Greater than or equal</td>
</tr>
</tbody>
<tbody>
<tr>
<td><code>[[ STRING =~ STRING ]]</code></td>
<td>Regexp</td>
</tr>
</tbody>
<tbody>
<tr>
<td><code>(( NUM &lt; NUM ))</code></td>
<td>Numeric conditions</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Condition</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>[[ -o noclobber ]]</code></td>
<td>If OPTIONNAME is enabled</td>
</tr>
</tbody>
<tbody>
<tr>
<td><code>[[ ! EXPR ]]</code></td>
<td>Not</td>
</tr>
<tr>
<td><code>[[ X ]] &amp;&amp; [[ Y ]]</code></td>
<td>And</td>
</tr>
<tr>
<td><code>[[ X ]] || [[ Y ]]</code></td>
<td>Or</td>
</tr>
</tbody>
</table>
</div></div><div class="h3-section" style="position: absolute; left: 410px; top: 0px;"><h3 id="file-conditions">File conditions</h3><div class="body">
<table>
<thead>
<tr>
<th>Condition</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>[[ -e FILE ]]</code></td>
<td>Exists</td>
</tr>
<tr>
<td><code>[[ -r FILE ]]</code></td>
<td>Readable</td>
</tr>
<tr>
<td><code>[[ -h FILE ]]</code></td>
<td>Symlink</td>
</tr>
<tr>
<td><code>[[ -d FILE ]]</code></td>
<td>Directory</td>
</tr>
<tr>
<td><code>[[ -w FILE ]]</code></td>
<td>Writable</td>
</tr>
<tr>
<td><code>[[ -s FILE ]]</code></td>
<td>Size is &gt; 0 bytes</td>
</tr>
<tr>
<td><code>[[ -f FILE ]]</code></td>
<td>File</td>
</tr>
<tr>
<td><code>[[ -x FILE ]]</code></td>
<td>Executable</td>
</tr>
</tbody>
<tbody>
<tr>
<td><code>[[ FILE1 -nt FILE2 ]]</code></td>
<td>1 is more recent than 2</td>
</tr>
<tr>
<td><code>[[ FILE1 -ot FILE2 ]]</code></td>
<td>2 is more recent than 1</td>
</tr>
<tr>
<td><code>[[ FILE1 -ef FILE2 ]]</code></td>
<td>Same files</td>
</tr>
</tbody>
</table>
</div></div><div class="h3-section" style="position: absolute; left: 821px; top: 0px;"><h3 id="example-1">Example</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">if</span> <span class="token function">ping</span> -c 1 google.com<span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token keyword">echo</span> <span class="token string">"It appears you have a working internet connection"</span>
<span class="token keyword">fi</span>
</code></pre>
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">if</span> <span class="token function">grep</span> -q <span class="token string">'foo'</span> ~/.bash_history<span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token keyword">echo</span> <span class="token string">"You appear to have typed 'foo' in the past"</span>
<span class="token keyword">fi</span>
</code></pre>
<pre class=" language-bash"><code class=" language-bash"><span class="token comment" spellcheck="true"># String</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> -z <span class="token string">"<span class="token variable">$string</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token keyword">echo</span> <span class="token string">"String is empty"</span>
<span class="token keyword">elif</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> -n <span class="token string">"<span class="token variable">$string</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token keyword">echo</span> <span class="token string">"String is not empty"</span>
<span class="token keyword">fi</span>
</code></pre>
<pre class=" language-bash"><code class=" language-bash"><span class="token comment" spellcheck="true"># Combinations</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> X <span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> Y <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token punctuation">..</span>.
<span class="token keyword">fi</span>
</code></pre>
<pre class=" language-bash"><code class=" language-bash"><span class="token comment" spellcheck="true"># Equal</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$A</span>"</span> <span class="token operator">==</span> <span class="token string">"<span class="token variable">$B</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre>
<pre class=" language-bash"><code class=" language-bash"><span class="token comment" spellcheck="true"># Regex</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">"A"</span> <span class="token operator">=</span>~ <span class="token string">"."</span> <span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre>
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">if</span> <span class="token variable"><span class="token punctuation">((</span> $a <span class="token operator">&lt;</span> $b <span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token keyword">echo</span> <span class="token string">"<span class="token variable">$a</span> is smaller than <span class="token variable">$b</span>"</span>
<span class="token keyword">fi</span>
</code></pre>
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> -e <span class="token string">"file.txt"</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token keyword">echo</span> <span class="token string">"file exists"</span>
<span class="token keyword">fi</span>
</code></pre>
</div></div></div></div><div class="h2-section"><h2 id="arrays"><a href="https://devhints.io/bash#arrays" class="local-anchor anchor">#</a>Arrays</h2><div class="body h3-section-list" data-js-h3-section-list="" style="position: relative; height: 457px;">
<div class="h3-section" style="position: absolute; left: 0px; top: 0px;"><h3 id="defining-arrays">Defining arrays</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash">Fruits<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">'Apple'</span> <span class="token string">'Banana'</span> <span class="token string">'Orange'</span><span class="token punctuation">)</span>
</code></pre>
<pre class=" language-bash"><code class=" language-bash">Fruits<span class="token punctuation">[</span>0<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"Apple"</span>
Fruits<span class="token punctuation">[</span>1<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"Banana"</span>
Fruits<span class="token punctuation">[</span>2<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"Orange"</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 616px; top: 0px;"><h3 id="working-with-arrays">Working with arrays</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">echo</span> <span class="token variable">${Fruits[0]}</span>           <span class="token comment" spellcheck="true"># Element #0</span>
<span class="token keyword">echo</span> <span class="token variable">${Fruits[@]}</span>           <span class="token comment" spellcheck="true"># All elements, space-separated</span>
<span class="token keyword">echo</span> <span class="token variable">${#Fruits[@]}</span>          <span class="token comment" spellcheck="true"># Number of elements</span>
<span class="token keyword">echo</span> <span class="token variable">${#Fruits}</span>             <span class="token comment" spellcheck="true"># String length of the 1st element</span>
<span class="token keyword">echo</span> <span class="token variable">${#Fruits[3]}</span>          <span class="token comment" spellcheck="true"># String length of the Nth element</span>
<span class="token keyword">echo</span> <span class="token variable">${Fruits[@]:3:2}</span>       <span class="token comment" spellcheck="true"># Range (from position 3, length 2)</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 0px; top: 215px;"><h3 id="operations">Operations</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash">Fruits<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">"<span class="token variable">${Fruits[@]}</span>"</span> <span class="token string">"Watermelon"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># Push</span>
Fruits+<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">'Watermelon'</span><span class="token punctuation">)</span>                  <span class="token comment" spellcheck="true"># Also Push</span>
Fruits<span class="token operator">=</span><span class="token punctuation">(</span> <span class="token variable">${Fruits[@]/Ap*/}</span> <span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># Remove by regex match</span>
unset Fruits<span class="token punctuation">[</span>2<span class="token punctuation">]</span>                         <span class="token comment" spellcheck="true"># Remove one item</span>
Fruits<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">"<span class="token variable">${Fruits[@]}</span>"</span><span class="token punctuation">)</span>                 <span class="token comment" spellcheck="true"># Duplicate</span>
Fruits<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">"<span class="token variable">${Fruits[@]}</span>"</span> <span class="token string">"<span class="token variable">${Veggies[@]}</span>"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># Concatenate</span>
lines<span class="token operator">=</span><span class="token punctuation">(</span>`cat <span class="token string">"logfile"</span>`<span class="token punctuation">)</span>                 <span class="token comment" spellcheck="true"># Read from file</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 616px; top: 222px;"><h3 id="iteration">Iteration</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token string">"<span class="token variable">${arrayName[@]}</span>"</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token keyword">echo</span> <span class="token variable">$i</span>
<span class="token keyword">done</span>
</code></pre>
</div></div></div></div><div class="h2-section -three-column"><h2 class="-three-column" id="dictionaries"><a href="https://devhints.io/bash#dictionaries" class="local-anchor anchor">#</a>Dictionaries</h2><div class="body h3-section-list -three-column" data-js-h3-section-list="" style="position: relative; height: 313px;">
<div class="h3-section" style="position: absolute; left: 0px; top: 0px;"><h3 id="defining">Defining</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">declare</span> -A sounds
</code></pre>
<pre class=" language-bash"><code class=" language-bash">sounds<span class="token punctuation">[</span>dog<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"bark"</span>
sounds<span class="token punctuation">[</span>cow<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"moo"</span>
sounds<span class="token punctuation">[</span>bird<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"tweet"</span>
sounds<span class="token punctuation">[</span>wolf<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"howl"</span>
</code></pre>
<p>Declares <code>sound</code> as a Dictionary object (aka associative array).</p>
</div></div><div class="h3-section" style="position: absolute; left: 410px; top: 0px;"><h3 id="working-with-dictionaries">Working with dictionaries</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">echo</span> <span class="token variable">${sounds[dog]}</span> <span class="token comment" spellcheck="true"># Dog's sound</span>
<span class="token keyword">echo</span> <span class="token variable">${sounds[@]}</span>   <span class="token comment" spellcheck="true"># All values</span>
<span class="token keyword">echo</span> <span class="token variable">${!sounds[@]}</span>  <span class="token comment" spellcheck="true"># All keys</span>
<span class="token keyword">echo</span> <span class="token variable">${#sounds[@]}</span>  <span class="token comment" spellcheck="true"># Number of elements</span>
unset sounds<span class="token punctuation">[</span>dog<span class="token punctuation">]</span>   <span class="token comment" spellcheck="true"># Delete dog</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 821px; top: 0px;"><h3 id="iteration-1">Iteration</h3><div class="body">
<h4 id="iterate-over-values">Iterate over values</h4>
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">for</span> val <span class="token keyword">in</span> <span class="token string">"<span class="token variable">${sounds[@]}</span>"</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token keyword">echo</span> <span class="token variable">$val</span>
<span class="token keyword">done</span>
</code></pre>
<h4 id="iterate-over-keys">Iterate over keys</h4>
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">for</span> key <span class="token keyword">in</span> <span class="token string">"<span class="token variable">${!sounds[@]}</span>"</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token keyword">echo</span> <span class="token variable">$key</span>
<span class="token keyword">done</span>
</code></pre>
</div></div></div></div><div class="h2-section"><h2 id="options"><a href="https://devhints.io/bash#options" class="local-anchor anchor">#</a>Options</h2><div class="body h3-section-list" data-js-h3-section-list="" style="position: relative; height: 280px;">
<div class="h3-section" style="position: absolute; left: 0px; top: 0px;"><h3 id="options-1">Options</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">set</span> -o noclobber  <span class="token comment" spellcheck="true"># Avoid overlay files (echo "hi" &gt; foo)</span>
<span class="token keyword">set</span> -o errexit    <span class="token comment" spellcheck="true"># Used to exit upon error, avoiding cascading errors</span>
<span class="token keyword">set</span> -o pipefail   <span class="token comment" spellcheck="true"># Unveils hidden failures</span>
<span class="token keyword">set</span> -o nounset    <span class="token comment" spellcheck="true"># Exposes unset variables</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 616px; top: 0px;"><h3 id="glob-options">Glob options</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">set</span> -o nullglob    <span class="token comment" spellcheck="true"># Non-matching globs are removed  ('*.foo' =&gt; '')</span>
<span class="token keyword">set</span> -o failglob    <span class="token comment" spellcheck="true"># Non-matching globs throw errors</span>
<span class="token keyword">set</span> -o nocaseglob  <span class="token comment" spellcheck="true"># Case insensitive globs</span>
<span class="token keyword">set</span> -o globdots    <span class="token comment" spellcheck="true"># Wildcards match dotfiles ("*.sh" =&gt; ".foo.sh")</span>
<span class="token keyword">set</span> -o globstar    <span class="token comment" spellcheck="true"># Allow ** for recursive matches ('lib/**/*.rb' =&gt; 'lib/a/b/c.rb')</span>
</code></pre>
<p>Set <code>GLOBIGNORE</code> as a colon-separated list of patterns to be removed from glob
matches.</p>
</div></div></div></div><div class="h2-section"><h2 id="history"><a href="https://devhints.io/bash#history" class="local-anchor anchor">#</a>History</h2><div class="body h3-section-list" data-js-h3-section-list="" style="position: relative; height: 617px;">
<div class="h3-section" style="position: absolute; left: 0px; top: 0px;"><h3 id="commands">Commands</h3><div class="body">
<table>
<tbody>
<tr>
<td><code>history</code></td>
<td>Show history</td>
</tr>
<tr>
<td><code>shopt -s histverify</code></td>
<td>Don’t execute expanded result immediately</td>
</tr>
</tbody>
</table>
</div></div><div class="h3-section" style="position: absolute; left: 616px; top: 0px;"><h3 id="expansions">Expansions</h3><div class="body">
<table>
<tbody>
<tr>
<td><code>!$</code></td>
<td>Expand last parameter of most recent command</td>
</tr>
<tr>
<td><code>!*</code></td>
<td>Expand all parameters of most recent command</td>
</tr>
<tr>
<td><code>!-n</code></td>
<td>Expand <code>n</code>th most recent command</td>
</tr>
<tr>
<td><code>!n</code></td>
<td>Expand <code>n</code>th command in history</td>
</tr>
<tr>
<td><code>!&lt;command&gt;</code></td>
<td>Expand most recent invocation of command <code>&lt;command&gt;</code></td>
</tr>
</tbody>
</table>
</div></div><div class="h3-section" style="position: absolute; left: 0px; top: 149px;"><h3 id="operations-1">Operations</h3><div class="body">
<table>
<tbody>
<tr>
<td><code>!!</code></td>
<td>Execute last command again</td>
</tr>
<tr>
<td><code>!!:s/&lt;FROM&gt;/&lt;TO&gt;/</code></td>
<td>Replace first occurrence of <code>&lt;FROM&gt;</code> to <code>&lt;TO&gt;</code> in most recent command</td>
</tr>
<tr>
<td><code>!!:gs/&lt;FROM&gt;/&lt;TO&gt;/</code></td>
<td>Replace all occurrences of <code>&lt;FROM&gt;</code> to <code>&lt;TO&gt;</code> in most recent command</td>
</tr>
<tr>
<td><code>!$:t</code></td>
<td>Expand only basename from last parameter of most recent command</td>
</tr>
<tr>
<td><code>!$:h</code></td>
<td>Expand only directory from last parameter of most recent command</td>
</tr>
</tbody>
</table>
<p><code>!!</code> and <code>!$</code> can be replaced with any valid expansion.</p>
</div></div><div class="h3-section" style="position: absolute; left: 616px; top: 269px;"><h3 id="slices">Slices</h3><div class="body">
<table>
<tbody>
<tr>
<td><code>!!:n</code></td>
<td>Expand only <code>n</code>th token from most recent command (command is <code>0</code>; first argument is <code>1</code>)</td>
</tr>
<tr>
<td><code>!^</code></td>
<td>Expand first argument from most recent command</td>
</tr>
<tr>
<td><code>!$</code></td>
<td>Expand last token from most recent command</td>
</tr>
<tr>
<td><code>!!:n-m</code></td>
<td>Expand range of tokens from most recent command</td>
</tr>
<tr>
<td><code>!!:n-$</code></td>
<td>Expand <code>n</code>th token to last from most recent command</td>
</tr>
</tbody>
</table>
<p><code>!!</code> can be replaced with any valid expansion i.e. <code>!cat</code>, <code>!-2</code>, <code>!42</code>, etc.</p>
</div></div></div></div><div class="h2-section"><h2 id="miscellaneous"><a href="https://devhints.io/bash#miscellaneous" class="local-anchor anchor">#</a>Miscellaneous</h2><div class="body h3-section-list" data-js-h3-section-list="" style="position: relative; height: 1540px;">
<div class="h3-section" style="position: absolute; left: 0px; top: 0px;"><h3 id="numeric-calculations">Numeric calculations</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token variable"><span class="token variable">$((</span>a <span class="token operator">+</span> <span class="token number">200</span><span class="token variable">))</span></span>      <span class="token comment" spellcheck="true"># Add 200 to $a</span>
</code></pre>
<pre class=" language-bash"><code class=" language-bash"><span class="token variable"><span class="token variable">$((</span>RANDOM<span class="token operator">%=</span><span class="token number">200</span><span class="token variable">))</span></span>  <span class="token comment" spellcheck="true"># Random number 0..200</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 616px; top: 0px;"><h3 id="subshells">Subshells</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token punctuation">(</span>cd somedir<span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token string">"I'm now in <span class="token variable">$PWD</span>"</span><span class="token punctuation">)</span>
<span class="token function">pwd</span> <span class="token comment" spellcheck="true"># still in first directory</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 616px; top: 142px;"><h3 id="redirection">Redirection</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash">python hello.py <span class="token operator">&gt;</span> output.txt   <span class="token comment" spellcheck="true"># stdout to (file)</span>
python hello.py <span class="token operator">&gt;&gt;</span> output.txt  <span class="token comment" spellcheck="true"># stdout to (file), append</span>
python hello.py 2<span class="token operator">&gt;</span> error.log   <span class="token comment" spellcheck="true"># stderr to (file)</span>
python hello.py 2<span class="token operator">&gt;</span><span class="token operator">&amp;</span>1           <span class="token comment" spellcheck="true"># stderr to stdout</span>
python hello.py 2<span class="token operator">&gt;</span>/dev/null    <span class="token comment" spellcheck="true"># stderr to (null)</span>
python hello.py <span class="token operator">&amp;</span><span class="token operator">&gt;</span>/dev/null    <span class="token comment" spellcheck="true"># stdout and stderr to (null)</span>
</code></pre>
<pre class=" language-bash"><code class=" language-bash">python hello.py <span class="token operator">&lt;</span> foo.txt      <span class="token comment" spellcheck="true"># feed foo.txt to stdin for python</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 0px; top: 175px;"><h3 id="inspecting-commands">Inspecting commands</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token function">command</span> -V <span class="token function">cd</span>
<span class="token comment" spellcheck="true">#=&gt; "cd is a function/alias/whatever"</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 0px; top: 317px;"><h3 id="trap-errors">Trap errors</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token function">trap</span> <span class="token string">'echo Error at about <span class="token variable">$LINENO</span>'</span> ERR
</code></pre>
<p>or</p>
<pre class=" language-bash"><code class=" language-bash">traperr<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">echo</span> <span class="token string">"ERROR: <span class="token variable">${BASH_SOURCE[1]}</span> at about <span class="token variable">${BASH_LINENO[0]}</span>"</span>
<span class="token punctuation">}</span>

<span class="token keyword">set</span> -o errtrace
<span class="token function">trap</span> traperr ERR
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 616px; top: 417px;"><h3 id="caseswitch">Case/switch</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">case</span> <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token keyword">in</span>
  start <span class="token operator">|</span> up<span class="token punctuation">)</span>
    vagrant up
    <span class="token punctuation">;</span><span class="token punctuation">;</span>

  *<span class="token punctuation">)</span>
    <span class="token keyword">echo</span> <span class="token string">"Usage: <span class="token variable">$0</span> {start|stop|ssh}"</span>
    <span class="token punctuation">;</span><span class="token punctuation">;</span>
esac
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 0px; top: 647px;"><h3 id="source-relative">Source relative</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token function">source</span> <span class="token string">"<span class="token variable">${0%/*}</span>/../share/foo.sh"</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 616px; top: 699px;"><h3 id="printf">printf</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token function">printf</span> <span class="token string">"Hello %s, I'm %s"</span> Sven Olga
<span class="token comment" spellcheck="true">#=&gt; "Hello Sven, I'm Olga</span>

<span class="token function">printf</span> <span class="token string">"1 + 1 = %d"</span> 2
<span class="token comment" spellcheck="true">#=&gt; "1 + 1 = 2"</span>

<span class="token function">printf</span> <span class="token string">"This is how you print a float: %f"</span> 2
<span class="token comment" spellcheck="true">#=&gt; "This is how you print a float: 2.000000"</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 0px; top: 769px;"><h3 id="directory-of-script">Directory of script</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash">DIR<span class="token operator">=</span><span class="token string">"<span class="token variable">${0%/*}</span>"</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 0px; top: 891px;"><h3 id="getting-options">Getting options</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">while</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token operator">=</span>~ ^- <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span> <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token operator">==</span> <span class="token string">"--"</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span>
  -V <span class="token operator">|</span> --version <span class="token punctuation">)</span>
    <span class="token keyword">echo</span> <span class="token variable">$version</span>
    <span class="token keyword">exit</span>
    <span class="token punctuation">;</span><span class="token punctuation">;</span>
  -s <span class="token operator">|</span> --string <span class="token punctuation">)</span>
    <span class="token function">shift</span><span class="token punctuation">;</span> string<span class="token operator">=</span><span class="token variable">$1</span>
    <span class="token punctuation">;</span><span class="token punctuation">;</span>
  -f <span class="token operator">|</span> --flag <span class="token punctuation">)</span>
    flag<span class="token operator">=</span>1
    <span class="token punctuation">;</span><span class="token punctuation">;</span>
esac<span class="token punctuation">;</span> <span class="token function">shift</span><span class="token punctuation">;</span> <span class="token keyword">done</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token operator">==</span> <span class="token string">'--'</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token function">shift</span><span class="token punctuation">;</span> <span class="token keyword">fi</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 616px; top: 961px;"><h3 id="heredoc">Heredoc</h3><div class="body">
<pre class=" language-sh"><code class=" language-sh">cat &lt;&lt;END
hello world
END
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 616px; top: 1123px;"><h3 id="reading-input">Reading input</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token keyword">echo</span> -n <span class="token string">"Proceed? [y/n]: "</span>
<span class="token function">read</span> ans
<span class="token keyword">echo</span> <span class="token variable">$ans</span>
</code></pre>
<pre class=" language-bash"><code class=" language-bash"><span class="token function">read</span> -n 1 ans    <span class="token comment" spellcheck="true"># Just one character</span>
</code></pre>
</div></div><div class="h3-section" style="position: absolute; left: 0px; top: 1253px;"><h3 id="special-variables">Special variables</h3><div class="body">
<table>
<tbody>
<tr>
<td><code>$?</code></td>
<td>Exit status of last task</td>
</tr>
<tr>
<td><code>$!</code></td>
<td>PID of last background task</td>
</tr>
<tr>
<td><code>$$</code></td>
<td>PID of shell</td>
</tr>
<tr>
<td><code>$0</code></td>
<td>Filename of the shell script</td>
</tr>
</tbody>
</table>
<p>See <a href="http://wiki.bash-hackers.org/syntax/shellvars#special_parameters_and_shell_variables">Special parameters</a>.</p>
</div></div><div class="h3-section" style="position: absolute; left: 616px; top: 1338px;"><h3 id="go-to-previous-directory">Go to previous directory</h3><div class="body">
<pre class=" language-bash"><code class=" language-bash"><span class="token function">pwd</span> <span class="token comment" spellcheck="true"># /home/user/foo</span>
<span class="token function">cd</span> bar/
<span class="token function">pwd</span> <span class="token comment" spellcheck="true"># /home/user/foo/bar</span>
<span class="token function">cd</span> -
<span class="token function">pwd</span> <span class="token comment" spellcheck="true"># /home/user/foo</span>
</code></pre>
</div></div></div></div><div class="h2-section -one-column"><h2 class="-one-column" id="also-see"><a href="https://devhints.io/bash#also-see" class="local-anchor anchor">#</a>Also see</h2><div class="body h3-section-list -one-column" data-js-h3-section-list="" style="position: relative; height: 210px;">
<div class="h3-section" style="position: absolute; left: 0px; top: 0px;"><div class="body"><ul>
<li><a href="http://wiki.bash-hackers.org/">Bash-hackers wiki</a> <em>(bash-hackers.org)</em></li>
<li><a href="http://wiki.bash-hackers.org/syntax/shellvars">Shell vars</a> <em>(bash-hackers.org)</em></li>
<li><a href="https://learnxinyminutes.com/docs/bash/">Learn bash in y minutes</a> <em>(learnxinyminutes.com)</em></li>
<li><a href="http://mywiki.wooledge.org/BashGuide">Bash Guide</a> <em>(mywiki.wooledge.org)</em></li>
<li><a href="https://www.shellcheck.net/">ShellCheck</a> <em>(shellcheck.net)</em></li>
</ul>
</div></div></div></div></main>
</div>
<div class="pre-footer" data-js-no-preview=""><i class="icon"></i></div>
<section class="comments-area" id="comments" data-js-no-preview="">
<div class="container">
<details class="comments-details">
<summary>
<strong class="count">
<span class="disqus-comment-count" data-disqus-identifier="bash" data-disqus-url="https://devhints.io/bash">17 Comments</span>
</strong>
<span class="suffix">for this cheatsheet.</span>
<span class="fauxlink">Write yours!</span>
</summary>
<div class="comments-section">
<div class="comments">
<div id="disqus_thread"><iframe id="dsq-app9484" name="dsq-app9484" allowtransparency="true" frameborder="0" scrolling="no" tabindex="0" title="Disqus" width="100%" src="./Bash scripting cheatsheet_files/saved_resource.html" horizontalscrolling="no" verticalscrolling="no" style="width: 1px !important; min-width: 100% !important; border: none !important; overflow: hidden !important; height: 0px !important;"></iframe></div>
</div>
</div>
</details>
</div>
<noscript data-js-disqus="{&quot;host&quot;:&quot;devhints.disqus.com&quot;,&quot;url&quot;:&quot;https://devhints.io/bash&quot;,&quot;identifier&quot;:&quot;bash&quot;}"></noscript>
</section>
<footer class="search-footer" data-js-no-preview="">
<div class="container">
<div class="search-footer-section">
<div class="search">
<form class="search" action="https://devhints.io/" method="get">
<label class="search-box -small">
<span class="prefix">devhints.io</span>
<span class="sep">/</span>
<input name="q" type="text" placeholder="Search 381+ cheatsheets">
</label>
</form>
</div>
<div class="links">
<a class="home-button" href="https://devhints.io/"><i></i></a>
</div>
</div>
</div>
</footer>
<footer class="related-posts-area" id="related" data-js-no-preview="">
<div class="container">
<div class="related-posts-section">
<div class="callout">
<a class="related-posts-callout" href="https://devhints.io/">
<div class="text">
<i class="icon"></i>
<span class="description">
Over 381 curated cheatsheets, by developers for developers.
</span>
<span class="push-button -dark">
Devhints home
</span>
</div>
</a>
</div>
<div class="group">
<div class="related-posts-group">
<h3>Other CLI cheatsheets</h3>
<ul class="related-post-list">
<li class="item related-post-item">
<a href="https://devhints.io/cron">
<strong>Cron</strong>
<span>
cheatsheet
<abbr class="attribute-peg -new-layout hint--bottom" data-hint="New layout!"><span></span></abbr>
</span>
</a>
</li>
<li class="item related-post-item">
<a href="https://devhints.io/homebrew">
<strong>Homebrew</strong>
<span>
cheatsheet
<abbr class="attribute-peg -new-layout hint--bottom" data-hint="New layout!"><span></span></abbr>
</span>
 </a>
</li>
<li class="item related-post-item">
<a href="https://devhints.io/httpie">
<strong>httpie</strong>
<span>
cheatsheet
<abbr class="attribute-peg -new-layout hint--bottom" data-hint="New layout!"><span></span></abbr>
</span>
</a>
</li>
<li class="item related-post-item">
<a href="https://devhints.io/adb">
<strong>adb (Android Debug Bridge)</strong>
<span>
cheatsheet
<abbr class="attribute-peg -new-layout hint--bottom" data-hint="New layout!"><span></span></abbr>
</span>
</a>
</li>
<li class="item related-post-item">
<a href="https://devhints.io/composer">
<strong>composer</strong>
<span>
cheatsheet
<abbr class="attribute-peg -new-layout hint--bottom" data-hint="New layout!"><span></span></abbr>
</span>
</a>
</li>
<li class="item related-post-item">
<a href="https://devhints.io/fish-shell">
<strong>Fish shell</strong>
<span>
cheatsheet
<abbr class="attribute-peg -new-layout hint--bottom" data-hint="New layout!"><span></span></abbr>
</span>
</a>
</li>
</ul>
</div>
</div>
<div class="group">
<div class="related-posts-group">
<h3>Top cheatsheets</h3>
<ul class="related-post-list">
<li class="item related-post-item">
<a href="https://devhints.io/elixir">
<strong>Elixir</strong>
<span>
cheatsheet
<abbr class="attribute-peg -new-layout hint--bottom" data-hint="New layout!"><span></span></abbr>
</span>
</a>
</li>
<li class="item related-post-item">
<a href="https://devhints.io/es6">
<strong>ES2015+</strong>
<span>
cheatsheet
<abbr class="attribute-peg -new-layout hint--bottom" data-hint="New layout!"><span></span></abbr>
</span>
</a>
</li>
<li class="item related-post-item">
<a href="https://devhints.io/react">
<strong>React.js</strong>
<span>
cheatsheet
<abbr class="attribute-peg -new-layout hint--bottom" data-hint="New layout!"><span></span></abbr>
</span>
</a>
</li>
<li class="item related-post-item">
<a href="https://devhints.io/vim-diff">
<strong>Vimdiff</strong>
<span>
cheatsheet
<abbr class="attribute-peg -new-layout hint--bottom" data-hint="New layout!"><span></span></abbr>
</span>
</a>
</li>
<li class="item related-post-item">
<a href="https://devhints.io/vim">
<strong>Vim</strong>
<span>
cheatsheet
<abbr class="attribute-peg -new-layout hint--bottom" data-hint="New layout!"><span></span></abbr>
</span>
</a>
</li>
<li class="item related-post-item">
<a href="https://devhints.io/vimscript">
<strong>Vim scripting</strong>
<span>
cheatsheet
<abbr class="attribute-peg -new-layout hint--bottom" data-hint="New layout!"><span></span></abbr>
</span>
</a>
</li>
</ul>
</div>
</div>
</div>
</div>
</footer>

<script>!function(e){function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}var t={};n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},n.p="",n(n.s=2)}([function(e,n){function t(e,n){var t=e.matches||e.matchesSelector||e.msMatchesSelector||e.mozMatchesSelector||e.webkitMatchesSelector||e.oMatchesSelector;if(t)return t.call(e,n);if(e.parentNode){for(var r=e.parentNode.querySelectorAll(n),o=r.length;o--;0)if(r[o]===e)return!0;return!1}}e.exports=t},function(e,n,t){function r(e,n){if(n){if(Array.isArray(n))return void o(n,function(n){r(e,n)});if(e.classList){var t=n.split(" ").filter(Boolean);o(t,function(n){e.classList.add(n)})}else e.className+=" "+n}}var o=t(4);e.exports=r},function(e,n,t){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(){d||((0,c.default)(document.documentElement,"LoadDone"),d=!0)}var i=t(3),u=r(i),a=t(1),c=r(a),f=t(6),l=r(f),s=document.querySelector("[data-js-main-body]");s&&((0,u.default)(s),(0,c.default)(s,"-wrapified")),(0,l.default)(window,"load",o),setTimeout(o,5e3);var d=void 0},function(e,n,t){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e){if(Array.isArray(e)){for(var n=0,t=Array(e.length);n<e.length;n++)t[n]=e[n];return t}return Array.from(e)}function i(e){u(e).forEach(function(e){(0,p.findChildren)(e,"[data-js-h3-section-list]").forEach(function(e){a(e)})})}function u(e){return c(e,{tag:"h2",wrapperFn:function(){return(0,p.createDiv)({class:"h2-section"})},bodyFn:function(){return(0,p.createDiv)({class:"body h3-section-list","data-js-h3-section-list":""})}})}function a(e){return c(e,{tag:"h3",wrapperFn:function(){return(0,p.createDiv)({class:"h3-section"})},bodyFn:function(){return(0,p.createDiv)({class:"body"})}})}function c(e,n){function t(e,n,t){var r=i(),o=e.className;o&&(0,d.default)(r,o),(0,p.before)(e,r);var a=u();return o&&(0,d.default)(a,o),(0,p.appendMany)(a,t),n&&r.appendChild(n),r.appendChild(a),r}var r=n.tag,i=n.wrapperFn,u=n.bodyFn,a=e.children[0],c=[];if(a&&!(0,l.default)(a,r)){var f=(0,p.nextUntil)(a,r);c.push(t(a,null,[a].concat(o(f))))}return(0,p.findChildren)(e,r).forEach(function(e){var n=(0,p.nextUntil)(e,r);c.push(t(e,e,n))}),c}Object.defineProperty(n,"__esModule",{value:!0}),n.default=i,n.groupify=c;var f=t(0),l=r(f),s=t(1),d=r(s),p=t(5)},function(e,n){function t(e,n){var t,r,o=e.length;if("number"==typeof o)for(t=0;t<o;t++)n(e[t],t);else{r=0;for(t in e)e.hasOwnProperty(t)&&n(e[t],t,r++)}return e}e.exports=t},function(e,n,t){"use strict";function r(e){if(Array.isArray(e)){for(var n=0,t=Array(e.length);n<e.length;n++)t[n]=e[n];return t}return Array.from(e)}function o(e,n){n.forEach(function(n){e.appendChild(n)})}function i(e,n){return u(e.nextSibling,n,[])}function u(e,n,t){return e?(0,s.default)(e,n)?t:u(e.nextSibling,n,[].concat(r(t),[e])):t}function a(e,n){e.parentNode.insertBefore(n,e)}function c(e,n){return[].slice.call(e.children).filter(function(e){return(0,s.default)(e,n)})}function f(e){var n=document.createElement("div");return Object.keys(e).forEach(function(t){n.setAttribute(t,e[t])}),n}Object.defineProperty(n,"__esModule",{value:!0}),n.appendMany=o,n.nextUntil=i,n.before=a,n.findChildren=c,n.createDiv=f;var l=t(0),s=function(e){return e&&e.__esModule?e:{default:e}}(l)},function(e,n){function t(e,n,t){e.addEventListener?e.addEventListener(n,t):e.attachEvent("on"+n,function(){t.call(e)})}e.exports=t}]);</script>
<script src="./Bash scripting cheatsheet_files/vendor.js"></script>
<script src="./Bash scripting cheatsheet_files/app.js"></script>


<iframe style="display: none;" src="./Bash scripting cheatsheet_files/saved_resource(1).html"></iframe></body></html>